{"version":3,"sources":["components/Navbar.js","Textvala.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","abouttext","role","placeholder","style","width","height","cursor","onClick","togglemode","htmlFor","Textvala","strarr","useState","text","settext","headline","backgroundColor","color","value","onChange","event","target","rows","newtextlikha","toUpperCase","showalert","toLowerCase","split","filter","e","length","defaultProps","Alert","alertmsg","word","lower","charAt","slice","capitalize","msg","App","setMode","alert","setalert","message","setTimeout","cls","document","body","classList","remove","add","likho","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28af8f2c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\"> {props.title} </a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/darklearn\">{props.abouttext}</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.abouttext}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div className=\"d-flex\">\r\n       <div className=\"bg-primary rounded mx-2\"style={{width:'30px',height:'30px',cursor:'pointer'}}  onClick={()=>{props.togglemode('primary')}}>B</div>\r\n       <div className=\"bg-danger rounded mx-2\"style={{width:'30px',height:'30px',cursor:'pointer'}}  onClick={()=>{props.togglemode('danger')}}>R</div>\r\n       <div className=\"bg-success rounded mx-2\"style={{width:'30px',height:'30px',cursor:'pointer'}}  onClick={()=>{props.togglemode('success')}}>G</div>\r\n       <div className=\"bg-warning rounded mx-2\"style={{width:'30px',height:'30px',cursor:'pointer'}}  onClick={()=>{props.togglemode('warning')}}>Y</div>\r\n       \r\n  </div>\r\n\r\n\r\n  <div className=\"form-check form-switch mx-2\">\r\n\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={()=>{props.togglemode(null)}} />\r\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">ENABLE MODE</label>\r\n\r\n</div>\r\n</nav>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string,\r\n    \r\n    abouttext: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\ntitle: 'defaultvalue',\r\nabouttext:\"about text here\"\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function Textvala(props) {\r\n    const [text, settext] = useState(\"enter krle shabd ok\");\r\n    const handleupclick=()=>{\r\n        // console.log(\"uppercase mei change ho jao\"+text);\r\n        let newtextlikha=text.toUpperCase();\r\n        settext(newtextlikha);\r\n        props.showalert(\"converted to UC\",\"success\");\r\n    }\r\n    const handlelcclick=()=>{\r\n        // console.log(\"uppercase mei change ho jao\"+text);\r\n        let newtextlikha=text.toLowerCase();\r\n        settext(newtextlikha);\r\n        props.showalert(\"converted to LC\",\"success\");\r\n    }\r\n    const handleonchange=(event)=>{\r\n        // console.log(\"on change clicked\");\r\n        settext(event.target.value);\r\n        // isse text update hota jaega\r\n        \r\n    }\r\n    const fixbug=(strarr)=>{\r\n        const result=strarr.filter(e=>e);\r\n        return result.length;\r\n    }\r\n    // text=\"change text like this wrong\"//wrong way\r\n    // settext(\"abh change text ho jaega\")//right way\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"container\">\r\n            <h2>{props.headline} </h2>\r\n            \r\n            <div className=\"mb-3\">\r\n\r\n            <textarea style={{backgroundColor: props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black' }} className=\"form-control\" \r\n            value={text}  onChange={handleonchange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button  onClick={handleupclick} className=\"btn btn-primary mx-2\"  >CONVERT TO UC</button>\r\n            <button onClick={handlelcclick} className=\"btn btn-primary mx-2\"  >CONVERT TO LC</button>\r\n\r\n            </div>\r\n            \r\n        <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2> TEXT SUMMARY </h2>\r\n            <p>{fixbug(text.split(\" \"))} words  and {text.length} characters</p>\r\n        </div>\r\n        \r\n        <p style={{color:props.mode==='dark'?'white':'black'}}><h2>PREVIEW: </h2>\r\n            {text}\r\n        </p>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n            props.alertmsg && <div className={`alert alert-${props.alertmsg.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alertmsg.type)}</strong>: {props.alertmsg.msg}\r\n            \r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\n// import Darklearn from './Darklearn';\nimport React, { useState } from 'react';\nimport Textvala from './Textvala';\nimport Alert from './Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n  \n// } from \"react-router-dom\";\n\nfunction App() {\nconst [mode, setMode] = useState('light');\n\nconst [alert,setalert]=useState(null);\n\nconst showalert=(message,type)=>{\n  setalert({msg: message,\n  type: type})\n  //naam same bhi likh skte objects mei\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n}\nconst remover=()=>{\n  document.body.classList.remove(\"bg-light\");\n  document.body.classList.remove(\"bg-dark\");\n  document.body.classList.remove(\"bg-primary\");\n  document.body.classList.remove(\"bg-success\");\n  document.body.classList.remove(\"bg-warning\");\n  document.body.classList.remove(\"bg-danger\");\n}\nconst togglemode=(cls)=>{\n  remover();\n  document.body.classList.add(\"bg-\"+cls);\n  if(mode ==='light'){\n    setMode('dark')\n    document.body.style.backgroundColor = \"grey\";\n    showalert(\"dark mode activated\",\"success\");\n    document.title='Arin-Dark';\n    //ye modify kr lena\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor = \"white\";\n    showalert(\"light mode activated\",\"success\");\n    document.title='Arin-Light';\n    //ye modify kr lena\n  }\n\n}\n \n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"ArinBar\" abouttext=\"HOME page\" mode={mode} togglemode={togglemode} /> \n\n    <Alert alertmsg={alert} />\n\n    <div className=\"container my-3\" >\n    {/* <Routes> */}\n\n          {/* <Route exact path=\"/darklearn\"\n            element={<Darklearn />}/> */}\n          \n          \n          {/* <Route exact path=\"/\" element={ */}\n          <Textvala showalert={showalert} headline=\"Enter text here arin : \"  likho =\"arin yha likho\" mode={mode}/>\n           {/* } */}\n\n          {/* /> */}\n          \n\n    {/* </Routes> */}\n    \n    </div>\n    \n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}